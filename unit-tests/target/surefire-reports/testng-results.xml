<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="22" passed="22" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-09T15:33:49 CEST" name="Surefire suite" finished-at="2025-09-09T15:33:50 CEST" duration-ms="423">
    <groups>
    </groups>
    <test started-at="2025-09-09T15:33:49 CEST" name="Surefire test" finished-at="2025-09-09T15:33:50 CEST" duration-ms="423">
      <class name="UnitTests">
        <test-method signature="amountParsingShouldWork()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:49 CEST" name="amountParsingShouldWork" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amountParsingShouldWork -->
        <test-method signature="capitalizeShouldUppercaseFirstLetter()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:49 CEST" name="capitalizeShouldUppercaseFirstLetter" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capitalizeShouldUppercaseFirstLetter -->
        <test-method signature="currencyFormattingShouldProduceTwoDecimals()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:49 CEST" name="currencyFormattingShouldProduceTwoDecimals" finished-at="2025-09-09T15:33:49 CEST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currencyFormattingShouldProduceTwoDecimals -->
        <test-method signature="dateParsingShouldWork()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:49 CEST" name="dateParsingShouldWork" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateParsingShouldWork -->
        <test-method signature="emailValidatorShouldAcceptValidEmail()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:50 CEST" name="emailValidatorShouldAcceptValidEmail" finished-at="2025-09-09T15:33:50 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailValidatorShouldAcceptValidEmail -->
        <test-method signature="passwordValidatorShouldRejectShortPasswords()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:50 CEST" name="passwordValidatorShouldRejectShortPasswords" finished-at="2025-09-09T15:33:50 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordValidatorShouldRejectShortPasswords -->
        <test-method signature="passwordValidatorShouldAcceptLongPasswords()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:50 CEST" name="passwordValidatorShouldAcceptLongPasswords" finished-at="2025-09-09T15:33:50 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordValidatorShouldAcceptLongPasswords -->
        <test-method signature="emailValidatorShouldRejectInvalidEmail()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:50 CEST" name="emailValidatorShouldRejectInvalidEmail" finished-at="2025-09-09T15:33:50 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailValidatorShouldRejectInvalidEmail -->
        <test-method signature="productNameValidationShouldWork()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:50 CEST" name="productNameValidationShouldWork" finished-at="2025-09-09T15:33:50 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productNameValidationShouldWork -->
        <test-method signature="roundingShouldRoundHalfUp()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:50 CEST" name="roundingShouldRoundHalfUp" finished-at="2025-09-09T15:33:50 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roundingShouldRoundHalfUp -->
        <test-method signature="shouldReturnCorrectSum()[pri:0, instance:UnitTests@5906ebcb]" started-at="2025-09-09T15:33:50 CEST" name="shouldReturnCorrectSum" finished-at="2025-09-09T15:33:50 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnCorrectSum -->
      </class> <!-- UnitTests -->
      <class name="com.bank.unit.UnitTests">
        <test-method signature="amountParsingShouldWork()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="amountParsingShouldWork" finished-at="2025-09-09T15:33:49 CEST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amountParsingShouldWork -->
        <test-method signature="capitalizeShouldUppercaseFirstLetter()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="capitalizeShouldUppercaseFirstLetter" finished-at="2025-09-09T15:33:49 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capitalizeShouldUppercaseFirstLetter -->
        <test-method signature="currencyFormattingShouldProduceTwoDecimals()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="currencyFormattingShouldProduceTwoDecimals" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currencyFormattingShouldProduceTwoDecimals -->
        <test-method signature="dateParsingShouldWork()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="dateParsingShouldWork" finished-at="2025-09-09T15:33:49 CEST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dateParsingShouldWork -->
        <test-method signature="emailValidatorShouldRejectInvalidEmail()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="emailValidatorShouldRejectInvalidEmail" finished-at="2025-09-09T15:33:49 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailValidatorShouldRejectInvalidEmail -->
        <test-method signature="emailValidatorShouldAcceptValidEmail()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="emailValidatorShouldAcceptValidEmail" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailValidatorShouldAcceptValidEmail -->
        <test-method signature="passwordValidatorShouldAcceptLongPasswords()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="passwordValidatorShouldAcceptLongPasswords" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordValidatorShouldAcceptLongPasswords -->
        <test-method signature="passwordValidatorShouldRejectShortPasswords()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="passwordValidatorShouldRejectShortPasswords" finished-at="2025-09-09T15:33:49 CEST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordValidatorShouldRejectShortPasswords -->
        <test-method signature="productNameValidationShouldWork()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="productNameValidationShouldWork" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productNameValidationShouldWork -->
        <test-method signature="roundingShouldRoundHalfUp()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="roundingShouldRoundHalfUp" finished-at="2025-09-09T15:33:49 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roundingShouldRoundHalfUp -->
        <test-method signature="shouldReturnCorrectSum()[pri:0, instance:com.bank.unit.UnitTests@14ec4505]" started-at="2025-09-09T15:33:49 CEST" name="shouldReturnCorrectSum" finished-at="2025-09-09T15:33:49 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnCorrectSum -->
      </class> <!-- com.bank.unit.UnitTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
